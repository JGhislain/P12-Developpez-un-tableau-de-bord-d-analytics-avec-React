{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\CustomTooltip.js\";\nimport React from 'react';\n\n/**\r\n * Composant personnalisé pour afficher des informations supplémentaires lors du survol d'un élément de graphique.\r\n * @param {Object} props - Les propriétés passées au composant Tooltip.\r\n * @returns Un élément JSX ou null si pas actif ou pas de données.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  // Vérifier si le Tooltip est actif et s'il y a des données\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label\",\n        children: `${label} : ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Retourner null si le Tooltip n'est pas actif ou s'il n'y a pas de données\n  return null;\n};\n_c = CustomTooltip;\nexport default CustomTooltip;\nvar _c;\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/CustomTooltip.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Composant personnalisé pour afficher des informations supplémentaires lors du survol d'un élément de graphique.\r\n * @param {Object} props - Les propriétés passées au composant Tooltip.\r\n * @returns Un élément JSX ou null si pas actif ou pas de données.\r\n */\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  // Vérifier si le Tooltip est actif et s'il y a des données\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        {/* Afficher le label et la valeur de la donnée survolée */}\r\n        <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n        {/* Vous pouvez ajouter d'autres informations ici si nécessaire */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Retourner null si le Tooltip n'est pas actif ou s'il n'y a pas de données\r\n  return null;\r\n};\r\n\r\nexport default CustomTooltip;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EACpD;EACA,IAAIF,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACE,MAAM,EAAE;IACvC,oBACEL,OAAA;MAAKM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAE7BP,OAAA;QAAGM,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAG,GAAEH,KAAM,MAAKD,OAAO,CAAC,CAAC,CAAC,CAACK,KAAM;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExD,CAAC;EAEV;;EAEA;EACA,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,GAdIZ,aAAa;AAgBnB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}