{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\PerformanceChart.js\",\n  _s = $RefreshSig$();\n// src/components/PerformanceChart.js\nimport React, { useState, useEffect } from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\nimport { getUserPerformance } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceChart = ({\n  userId\n}) => {\n  _s();\n  const [performanceData, setPerformanceData] = useState([]);\n  useEffect(() => {\n    const fetchPerformanceData = async () => {\n      const {\n        data,\n        kind\n      } = await getUserPerformance(userId);\n      if (data && kind) {\n        const formattedData = data.map(item => ({\n          subject: kind[item.kind],\n          // Utiliser l'objet kind pour associer chaque performance à son label\n          A: item.value,\n          fullMark: 200\n        }));\n        setPerformanceData(formattedData);\n      }\n    };\n    fetchPerformanceData();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"performance-chart-bloc\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      className: 'performance-charts-container',\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: \"63%\",\n        data: performanceData,\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          dataKey: \"subject\",\n          tick: {\n            fill: '#FFFFFF',\n            fontSize: 12,\n            angle: -45\n          },\n          tickMargin: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n          angle: 30,\n          domain: [0, 200]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          name: \"Performance\",\n          dataKey: \"A\",\n          stroke: \"#E60000\",\n          fill: \"#E60000\",\n          fillOpacity: 0.6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceChart, \"W5HtXhwMP4QKIIQg63Bm2kB7eZA=\");\n_c = PerformanceChart;\nexport default PerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"PerformanceChart\");","map":{"version":3,"names":["React","useState","useEffect","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","getUserPerformance","jsxDEV","_jsxDEV","PerformanceChart","userId","_s","performanceData","setPerformanceData","fetchPerformanceData","data","kind","formattedData","map","item","subject","A","value","fullMark","className","children","width","height","cx","cy","outerRadius","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tick","fill","fontSize","angle","tickMargin","domain","name","stroke","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/PerformanceChart.js"],"sourcesContent":["// src/components/PerformanceChart.js\r\nimport React, { useState, useEffect} from 'react';\r\nimport {Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer} from 'recharts';\r\nimport { getUserPerformance } from '../services/apiService';\r\n\r\nconst PerformanceChart = ({ userId }) => {\r\n  const [performanceData, setPerformanceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPerformanceData = async () => {\r\n      const { data, kind } = await getUserPerformance(userId);\r\n      if (data && kind) {\r\n        const formattedData = data.map(item => ({\r\n          subject: kind[item.kind], // Utiliser l'objet kind pour associer chaque performance à son label\r\n          A: item.value,\r\n          fullMark: 200\r\n        }));\r\n        setPerformanceData(formattedData);\r\n      }\r\n    };\r\n\r\n    fetchPerformanceData();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className='performance-chart-bloc'>\r\n      <ResponsiveContainer className={'performance-charts-container'} width=\"100%\" height='100%'>\r\n        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"63%\" data={performanceData}>\r\n          <PolarGrid />\r\n          <PolarAngleAxis dataKey=\"subject\" tick={{ fill: '#FFFFFF', fontSize: 12, angle: -45}} tickMargin={10}/>\r\n          <PolarRadiusAxis angle={30} domain={[0, 200]} />\r\n          <Radar name=\"Performance\" dataKey=\"A\" stroke=\"#E60000\" fill=\"#E60000\" fillOpacity={0.6} />\r\n        </RadarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAAQC,KAAK,EAAEC,UAAU,EAAEC,SAAS,EAAEC,cAAc,EAAEC,eAAe,EAAEC,mBAAmB,QAAO,UAAU;AAC3G,SAASC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAC,GAAG,MAAMV,kBAAkB,CAACI,MAAM,CAAC;MACvD,IAAIK,IAAI,IAAIC,IAAI,EAAE;QAChB,MAAMC,aAAa,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;UACtCC,OAAO,EAAEJ,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC;UAAE;UAC1BK,CAAC,EAAEF,IAAI,CAACG,KAAK;UACbC,QAAQ,EAAE;QACZ,CAAC,CAAC,CAAC;QACHV,kBAAkB,CAACI,aAAa,CAAC;MACnC;IACF,CAAC;IAEDH,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAKgB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrCjB,OAAA,CAACH,mBAAmB;MAACmB,SAAS,EAAE,8BAA+B;MAACE,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAF,QAAA,eACxFjB,OAAA,CAACP,UAAU;QAAC2B,EAAE,EAAC,KAAK;QAACC,EAAE,EAAC,KAAK;QAACC,WAAW,EAAC,KAAK;QAACf,IAAI,EAAEH,eAAgB;QAAAa,QAAA,gBACpEjB,OAAA,CAACN,SAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACb1B,OAAA,CAACL,cAAc;UAACgC,OAAO,EAAC,SAAS;UAACC,IAAI,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE,CAAC;UAAE,CAAE;UAACC,UAAU,EAAE;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvG1B,OAAA,CAACJ,eAAe;UAACmC,KAAK,EAAE,EAAG;UAACE,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChD1B,OAAA,CAACR,KAAK;UAAC0C,IAAI,EAAC,aAAa;UAACP,OAAO,EAAC,GAAG;UAACQ,MAAM,EAAC,SAAS;UAACN,IAAI,EAAC,SAAS;UAACO,WAAW,EAAE;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/BIF,gBAAgB;AAAAoC,EAAA,GAAhBpC,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}