{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\AverageSessionsChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, ResponsiveContainer, Tooltip } from 'recharts';\nimport CustomTooltip from './CustomTooltip';\nimport { getUserAverageSession } from '../services/apiService';\n\n// Tableau contenant les abréviations des jours de la semaine pour l'axe X du graphique.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n\n// Composant qui affiche un graphique linéaire de la durée moyenne des sessions d'entraînement de l'utilisateur.\nconst AverageSessionsChart = ({\n  userId\n}) => {\n  _s();\n  const [averageSessionsData, setAverageSessionsData] = useState([]);\n\n  // Utilise useEffect pour charger les données de sessions dès le chargement du composant ou lors du changement de userId.\n  useEffect(() => {\n    // Fonction asynchrone pour récupérer les données des sessions moyennes d'un utilisateur.\n    const fetchAverageSessionsData = async () => {\n      const response = await getUserAverageSession(userId);\n      if (response && response.data && response.data.sessions) {\n        // Formatte les données pour le graphique en utilisant les abréviations des jours.\n        const formattedData = response.data.sessions.map(session => ({\n          ...session,\n          day: daysOfWeek[session.day - 1]\n        }));\n        console.log(\"Formatted Data for Chart:\", formattedData);\n        setAverageSessionsData(formattedData);\n      }\n    };\n    fetchAverageSessionsData();\n    // Relance la requête lorsque l'userId change.\n  }, [userId]);\n\n  // Affiche un message de chargement si les données ne sont pas encore disponibles.\n  if (!averageSessionsData || averageSessionsData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement des donn\\xE9es de sessions moyennes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"average-session-chart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      className: \"average-container\",\n      width: \"100%\",\n      height: \"75%\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"average-session-title\",\n        children: \"Dur\\xE9e moyenne des sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: averageSessionsData,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\",\n          tick: {\n            fill: '#ff8080',\n            fontSize: 14\n          },\n          tickLine: false,\n          axisLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"sessionLength\",\n          stroke: \"#ff8080\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n            type: \"averageSessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this),\n          className: \"average-tooltip\",\n          cursor: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AverageSessionsChart, \"k1O0gP6jV4xxUQ+QvR/M0xgKCho=\");\n_c = AverageSessionsChart;\nexport default AverageSessionsChart;\nvar _c;\n$RefreshReg$(_c, \"AverageSessionsChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","ResponsiveContainer","Tooltip","CustomTooltip","getUserAverageSession","jsxDEV","_jsxDEV","daysOfWeek","AverageSessionsChart","userId","_s","averageSessionsData","setAverageSessionsData","fetchAverageSessionsData","response","data","sessions","formattedData","map","session","day","console","log","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","dataKey","tick","fill","fontSize","tickLine","axisLine","type","stroke","strokeWidth","dot","content","cursor","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/AverageSessionsChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, ResponsiveContainer, Tooltip } from 'recharts';\r\nimport CustomTooltip from './CustomTooltip';\r\nimport { getUserAverageSession } from '../services/apiService';\r\n\r\n// Tableau contenant les abréviations des jours de la semaine pour l'axe X du graphique.\r\nconst daysOfWeek = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\r\n\r\n// Composant qui affiche un graphique linéaire de la durée moyenne des sessions d'entraînement de l'utilisateur.\r\nconst AverageSessionsChart = ({ userId }) => {\r\n  const [averageSessionsData, setAverageSessionsData] = useState([]);\r\n\r\n  // Utilise useEffect pour charger les données de sessions dès le chargement du composant ou lors du changement de userId.\r\n  useEffect(() => {\r\n     // Fonction asynchrone pour récupérer les données des sessions moyennes d'un utilisateur.\r\n    const fetchAverageSessionsData = async () => {\r\n      const response = await getUserAverageSession(userId);\r\n      if (response && response.data && response.data.sessions) {\r\n        // Formatte les données pour le graphique en utilisant les abréviations des jours.\r\n        const formattedData = response.data.sessions.map(session => ({\r\n          ...session,\r\n          day: daysOfWeek[session.day - 1]\r\n        }));\r\n        console.log(\"Formatted Data for Chart:\", formattedData);\r\n        setAverageSessionsData(formattedData);\r\n      }\r\n    };\r\n\r\n    fetchAverageSessionsData();\r\n    // Relance la requête lorsque l'userId change.\r\n  }, [userId]);\r\n\r\n  // Affiche un message de chargement si les données ne sont pas encore disponibles.\r\n  if (!averageSessionsData || averageSessionsData.length === 0) {\r\n    return <div>Chargement des données de sessions moyennes...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"average-session-chart-wrapper\">\r\n      <ResponsiveContainer className='average-container' width='100%' height='75%'>\r\n        <h2 className=\"average-session-title\">\r\n          Durée moyenne des sessions\r\n        </h2>\r\n        <LineChart data={averageSessionsData}>\r\n          {/* Axe X avec les jours de la semaine comme catégories */}\r\n          <XAxis dataKey=\"day\" tick={{ fill: '#ff8080', fontSize: 14 }} tickLine={false} axisLine={false}/>\r\n          {/* Ligne représentant la durée des sessions */}\r\n          <Line type=\"monotone\" dataKey=\"sessionLength\" stroke=\"#ff8080\" strokeWidth={2} dot={false} />\r\n          {/* Tooltip personnalisé pour afficher des informations supplémentaires au survol */}\r\n          <Tooltip content={<CustomTooltip type=\"averageSessions\"/>} className='average-tooltip' cursor={false}/>\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AverageSessionsChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}