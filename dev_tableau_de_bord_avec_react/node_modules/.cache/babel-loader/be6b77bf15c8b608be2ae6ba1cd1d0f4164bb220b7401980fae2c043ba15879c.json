{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\PerformanceChart.js\",\n  _s = $RefreshSig$();\n// src/components/PerformanceChart.js\nimport React, { useState, useEffect } from 'react';\nimport { Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\nimport { getUserPerformance } from '../services/apiService';\nimport { USER_PERFORMANCE } from '../data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst labelsFrench = {\n  cardio: 'Cardio',\n  energy: 'Énergie',\n  endurance: 'Endurance',\n  strength: 'Force',\n  speed: 'Vitesse',\n  intensity: 'Intensité'\n};\nconst PerformanceChart = ({\n  userId,\n  useMockData\n}) => {\n  _s();\n  const [performanceData, setPerformanceData] = useState([]);\n  useEffect(() => {\n    const fetchPerformanceData = async () => {\n      let data, kind;\n      if (useMockData) {\n        const userPerformance = USER_PERFORMANCE.find(perf => perf.userId === userId);\n        if (userPerformance) {\n          data = userPerformance.data;\n          kind = userPerformance.kind;\n        }\n      } else {\n        const performance = await getUserPerformance(userId);\n        data = performance.data;\n        kind = performance.kind;\n      }\n      if (data && kind) {\n        const formattedData = data.map(item => ({\n          subject: labelsFrench[kind[item.kind]],\n          A: item.value,\n          fullMark: 200\n        }));\n        setPerformanceData(formattedData);\n      }\n    };\n    fetchPerformanceData();\n  }, [userId, useMockData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"performance-chart-bloc\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      className: 'performance-charts-container',\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: \"70%\",\n        data: performanceData,\n        children: [/*#__PURE__*/_jsxDEV(PolarGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n          dataKey: \"subject\",\n          tick: {\n            fill: '#FFFFFF',\n            fontSize: \"0.60vw\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PolarRadiusAxis, {\n          angle: 30,\n          domain: [0, 200],\n          tick: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Radar, {\n          name: \"Performance\",\n          dataKey: \"A\",\n          stroke: \"#E60000\",\n          fill: \"#E60000\",\n          fillOpacity: 0.7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceChart, \"W5HtXhwMP4QKIIQg63Bm2kB7eZA=\");\n_c = PerformanceChart;\nexport default PerformanceChart;\nvar _c;\n$RefreshReg$(_c, \"PerformanceChart\");","map":{"version":3,"names":["React","useState","useEffect","Radar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","getUserPerformance","USER_PERFORMANCE","jsxDEV","_jsxDEV","labelsFrench","cardio","energy","endurance","strength","speed","intensity","PerformanceChart","userId","useMockData","_s","performanceData","setPerformanceData","fetchPerformanceData","data","kind","userPerformance","find","perf","performance","formattedData","map","item","subject","A","value","fullMark","className","children","width","height","cx","cy","outerRadius","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","tick","fill","fontSize","angle","domain","name","stroke","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/PerformanceChart.js"],"sourcesContent":["// src/components/PerformanceChart.js\r\nimport React, { useState, useEffect} from 'react';\r\nimport {Radar, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer} from 'recharts';\r\nimport { getUserPerformance } from '../services/apiService';\r\nimport { USER_PERFORMANCE } from '../data.js';\r\n\r\nconst labelsFrench = {\r\n  cardio: 'Cardio',\r\n  energy: 'Énergie',\r\n  endurance: 'Endurance',\r\n  strength: 'Force',\r\n  speed: 'Vitesse',\r\n  intensity: 'Intensité'\r\n};\r\n\r\nconst PerformanceChart = ({ userId, useMockData }) => {\r\n  const [performanceData, setPerformanceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPerformanceData = async () => {\r\n      let data, kind;\r\n      if (useMockData) {\r\n        const userPerformance = USER_PERFORMANCE.find(perf => perf.userId === userId);\r\n        if (userPerformance) {\r\n          data = userPerformance.data;\r\n          kind = userPerformance.kind;\r\n        }\r\n      } else {\r\n        const performance = await getUserPerformance(userId);\r\n        data = performance.data;\r\n        kind = performance.kind;\r\n      }\r\n      if (data && kind) {\r\n        const formattedData = data.map(item => ({\r\n          subject: labelsFrench[kind[item.kind]],\r\n          A: item.value,\r\n          fullMark: 200\r\n        }));\r\n        setPerformanceData(formattedData);\r\n      }\r\n    };\r\n\r\n    fetchPerformanceData();\r\n  }, [userId, useMockData]);\r\n\r\n  return (\r\n    <div className='performance-chart-bloc'>\r\n      <ResponsiveContainer className={'performance-charts-container'} width=\"100%\" height=\"100%\">\r\n        <RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"70%\" data={performanceData}>\r\n          <PolarGrid />\r\n          <PolarAngleAxis dataKey=\"subject\" tick={{ fill: '#FFFFFF', fontSize: \"0.60vw\"}} />\r\n          <PolarRadiusAxis angle={30} domain={[0, 200]} tick={false} />\r\n          <Radar name=\"Performance\" dataKey=\"A\" stroke=\"#E60000\" fill=\"#E60000\" fillOpacity={0.7} />\r\n        </RadarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}