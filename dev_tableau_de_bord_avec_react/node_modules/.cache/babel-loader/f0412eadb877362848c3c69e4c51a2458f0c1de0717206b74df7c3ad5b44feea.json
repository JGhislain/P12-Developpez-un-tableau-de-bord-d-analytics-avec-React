{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\ScorePieChart.js\";\n// src/components/ScorePieChart.js\nimport React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Text } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScorePieChart = ({\n  score\n}) => {\n  // Convertir le score en pourcentage\n  const scorePercentage = score * 100;\n  const data = [{\n    name: 'Score',\n    value: scorePercentage,\n    fill: '#FF0000'\n  },\n  // Le reste du cercle sera transparent\n  {\n    name: 'Rest',\n    value: 100 - scorePercentage,\n    fill: 'transparent'\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 500,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        startAngle: 90,\n        endAngle: 270 // Inverser le sens de remplissage\n        ,\n        innerRadius: \"60%\",\n        outerRadius: \"80%\",\n        paddingAngle: 5,\n        dataKey: \"value\",\n        cornerRadius: 10,\n        blendStroke: true,\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.fill\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        x: \"50%\",\n        y: \"50%\",\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        className: \"chart-number\",\n        children: `${scorePercentage}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        x: \"50%\",\n        y: \"60%\",\n        textAnchor: \"middle\",\n        dominantBaseline: \"central\",\n        className: \"chart-label\",\n        children: \"de votre objectif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = ScorePieChart;\nexport default ScorePieChart;\nvar _c;\n$RefreshReg$(_c, \"ScorePieChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","ResponsiveContainer","Text","jsxDEV","_jsxDEV","ScorePieChart","score","scorePercentage","data","name","value","fill","width","height","children","cx","cy","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","dataKey","cornerRadius","blendStroke","map","entry","index","fileName","_jsxFileName","lineNumber","columnNumber","x","y","textAnchor","dominantBaseline","className","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/ScorePieChart.js"],"sourcesContent":["// src/components/ScorePieChart.js\r\nimport React from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Text } from 'recharts';\r\n\r\nconst ScorePieChart = ({ score }) => {\r\n  // Convertir le score en pourcentage\r\n  const scorePercentage = score * 100;\r\n  const data = [\r\n    { name: 'Score', value: scorePercentage, fill: '#FF0000' },\r\n    // Le reste du cercle sera transparent\r\n    { name: 'Rest', value: 100 - scorePercentage, fill: 'transparent' },\r\n  ];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={500}>\r\n      <PieChart>\r\n        <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            startAngle={90}\r\n            endAngle={270} // Inverser le sens de remplissage\r\n            innerRadius=\"60%\"\r\n            outerRadius=\"80%\"\r\n            paddingAngle={5}\r\n            dataKey=\"value\"\r\n            cornerRadius={10}\r\n            blendStroke\r\n        >\r\n        {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={entry.fill} />\r\n            ))}\r\n        </Pie>\r\n            {/* Utilisation de deux éléments Text pour le retour à la ligne */}\r\n            <Text x=\"50%\" y=\"50%\" textAnchor=\"middle\" dominantBaseline=\"central\" className=\"chart-number\">\r\n                {`${scorePercentage}%`}\r\n            </Text>\r\n            <Text x=\"50%\" y=\"60%\" textAnchor=\"middle\" dominantBaseline=\"central\" className=\"chart-label\">\r\n                de votre objectif\r\n            </Text>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ScorePieChart;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,mBAAmB,EAAEC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACnC;EACA,MAAMC,eAAe,GAAGD,KAAK,GAAG,GAAG;EACnC,MAAME,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAEH,eAAe;IAAEI,IAAI,EAAE;EAAU,CAAC;EAC1D;EACA;IAAEF,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,GAAG,GAAGH,eAAe;IAAEI,IAAI,EAAE;EAAc,CAAC,CACpE;EAED,oBACEP,OAAA,CAACH,mBAAmB;IAACW,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CV,OAAA,CAACN,QAAQ;MAAAgB,QAAA,gBACPV,OAAA,CAACL,GAAG;QACAS,IAAI,EAAEA,IAAK;QACXO,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,UAAU,EAAE,EAAG;QACfC,QAAQ,EAAE,GAAI,CAAC;QAAA;QACfC,WAAW,EAAC,KAAK;QACjBC,WAAW,EAAC,KAAK;QACjBC,YAAY,EAAE,CAAE;QAChBC,OAAO,EAAC,OAAO;QACfC,YAAY,EAAE,EAAG;QACjBC,WAAW;QAAAV,QAAA,EAEdN,IAAI,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnBvB,OAAA,CAACJ,IAAI;UAAuBW,IAAI,EAAEe,KAAK,CAACf;QAAK,GAAjC,QAAOgB,KAAM,EAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEF3B,OAAA,CAACF,IAAI;QAAC8B,CAAC,EAAC,KAAK;QAACC,CAAC,EAAC,KAAK;QAACC,UAAU,EAAC,QAAQ;QAACC,gBAAgB,EAAC,SAAS;QAACC,SAAS,EAAC,cAAc;QAAAtB,QAAA,EACvF,GAAEP,eAAgB;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACP3B,OAAA,CAACF,IAAI;QAAC8B,CAAC,EAAC,KAAK;QAACC,CAAC,EAAC,KAAK;QAACC,UAAU,EAAC,QAAQ;QAACC,gBAAgB,EAAC,SAAS;QAACC,SAAS,EAAC,aAAa;QAAAtB,QAAA,EAAC;MAE7F;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B,CAAC;AAACM,EAAA,GAvCIhC,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}