{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\DailyActivityChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip } from 'recharts';\nimport CustomTooltip from './CustomTooltip';\nimport { getUserActivity } from '../services/apiService';\n\n// 'userId' est passé en prop au composant pour récupérer les données spécifiques à cet utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyActivityChart = ({\n  userId\n}) => {\n  _s();\n  const [activityData, setActivityData] = useState([]);\n  useEffect(() => {\n    const fetchActivityData = async () => {\n      try {\n        // Passer userId à getUserActivity\n        const {\n          data\n        } = await getUserActivity(userId);\n        if (data.sessions) {\n          setActivityData(data.sessions);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données d'activité\", error);\n      }\n    };\n    fetchActivityData();\n  }, [userId]); // Ajouter userId comme dépendance de useEffect pour relancer la requête si userId change\n\n  // Transformation des données ici si nécessaire\n  const formattedData = activityData.map(session => ({\n    ...session,\n    day: `${new Date(session.day).getDate()}`\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-activity-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-weight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color-weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-legend\",\n            children: \"Poids (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-cal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color-cal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-legend\",\n            children: \"Calories br\\xFBl\\xE9es (kCal)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: formattedData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          vertical: false,\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          tick: {\n            fill: '#74798C',\n            fontSize: 14\n          },\n          tickMargin: 16,\n          tickLine: false,\n          axisLine: false,\n          domain: ['dataMin - 50', 'dataMax + 50']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"left\",\n          dataKey: \"kilogram\",\n          fill: \"#282D30\",\n          barSize: 10,\n          radius: [3, 3, 0, 0],\n          name: \"Poids (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"right\",\n          dataKey: \"calories\",\n          fill: \"#E60000\",\n          barSize: 10,\n          radius: [3, 3, 0, 0],\n          name: \"Calories br\\xFBl\\xE9es (kCal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n            type: \"dailyActivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 31\n          }, this),\n          className: \"daily-tooltip\",\n          cursor: {\n            fill: 'grey',\n            opacity: 0.3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n_s(DailyActivityChart, \"Qc5IpcC4vhcEOdc2tcJS7hO22yI=\");\n_c = DailyActivityChart;\nexport default DailyActivityChart;\nvar _c;\n$RefreshReg$(_c, \"DailyActivityChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","Tooltip","CustomTooltip","getUserActivity","jsxDEV","_jsxDEV","DailyActivityChart","userId","_s","activityData","setActivityData","fetchActivityData","data","sessions","error","console","formattedData","map","session","day","Date","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","vertical","strokeDasharray","dataKey","yAxisId","orientation","hide","tick","fill","fontSize","tickMargin","tickLine","axisLine","domain","barSize","radius","name","content","type","cursor","opacity","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/DailyActivityChart.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport CustomTooltip from './CustomTooltip';\r\nimport { getUserActivity } from '../services/apiService';\r\n\r\n// 'userId' est passé en prop au composant pour récupérer les données spécifiques à cet utilisateur\r\nconst DailyActivityChart = ({ userId }) => {\r\n  const [activityData, setActivityData] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const fetchActivityData = async () => {\r\n          try {\r\n              // Passer userId à getUserActivity\r\n              const { data } = await getUserActivity(userId);\r\n              if (data.sessions) {\r\n                  setActivityData(data.sessions);\r\n              }\r\n          } catch (error) {\r\n              console.error(\"Erreur lors de la récupération des données d'activité\", error);\r\n          }\r\n      };\r\n\r\n      fetchActivityData();\r\n  }, [userId]); // Ajouter userId comme dépendance de useEffect pour relancer la requête si userId change\r\n\r\n  // Transformation des données ici si nécessaire\r\n  const formattedData = activityData.map(session => ({\r\n      ...session,\r\n      day: `${new Date(session.day).getDate()}`,\r\n  }));\r\n  \r\n    return (\r\n      <div className=\"daily-activity-chart\">\r\n        <div className=\"chart-header\">\r\n          <h2>Activité quotidienne</h2>\r\n          <div className=\"chart-legend\">\r\n            <div className=\"legend-weight\">\r\n              <span className=\"legend-color-weight\"></span>\r\n              <span className='text-legend'>Poids (kg)</span>\r\n            </div>\r\n            <div className=\"legend-cal\">\r\n              <span className=\"legend-color-cal\"></span>\r\n              <span className='text-legend'>Calories brûlées (kCal)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <BarChart data={formattedData}>\r\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"day\" />\r\n            <YAxis yAxisId=\"left\" orientation=\"left\" hide={true} />\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" tick={{ fill: '#74798C', fontSize: 14 }} tickMargin={16} tickLine={false} axisLine={false} domain={['dataMin - 50', 'dataMax + 50']} />\r\n            <Bar yAxisId=\"left\" dataKey=\"kilogram\" fill=\"#282D30\" barSize={10} radius={[3, 3, 0, 0]} name=\"Poids (kg)\" />\r\n            <Bar yAxisId=\"right\" dataKey=\"calories\" fill=\"#E60000\" barSize={10} radius={[3, 3, 0, 0]} name=\"Calories brûlées (kCal)\" />\r\n            <Tooltip content={<CustomTooltip type=\"dailyActivity\"/>} className=\"daily-tooltip\" cursor={{fill: 'grey', opacity: 0.3}} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default DailyActivityChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,OAAO,QAAO,UAAU;AAClG,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,eAAe,QAAQ,wBAAwB;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMT,eAAe,CAACI,MAAM,CAAC;QAC9C,IAAIK,IAAI,CAACC,QAAQ,EAAE;UACfH,eAAe,CAACE,IAAI,CAACC,QAAQ,CAAC;QAClC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;MACjF;IACJ,CAAC;IAEDH,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd;EACA,MAAMS,aAAa,GAAGP,YAAY,CAACQ,GAAG,CAACC,OAAO,KAAK;IAC/C,GAAGA,OAAO;IACVC,GAAG,EAAG,GAAE,IAAIC,IAAI,CAACF,OAAO,CAACC,GAAG,CAAC,CAACE,OAAO,CAAC,CAAE;EAC5C,CAAC,CAAC,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnClB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BlB,OAAA;QAAAkB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtB,OAAA;QAAKiB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BlB,OAAA;UAAKiB,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BlB,OAAA;YAAMiB,SAAS,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7CtB,OAAA;YAAMiB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACNtB,OAAA;UAAKiB,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlB,OAAA;YAAMiB,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1CtB,OAAA;YAAMiB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtB,OAAA,CAACL,mBAAmB;MAAC4B,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5ClB,OAAA,CAACV,QAAQ;QAACiB,IAAI,EAAEI,aAAc;QAAAO,QAAA,gBAC5BlB,OAAA,CAACN,aAAa;UAAC+B,QAAQ,EAAE,KAAM;UAACC,eAAe,EAAC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDtB,OAAA,CAACR,KAAK;UAACmC,OAAO,EAAC;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvBtB,OAAA,CAACP,KAAK;UAACmC,OAAO,EAAC,MAAM;UAACC,WAAW,EAAC,MAAM;UAACC,IAAI,EAAE;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvDtB,OAAA,CAACP,KAAK;UAACmC,OAAO,EAAC,OAAO;UAACC,WAAW,EAAC,OAAO;UAACE,IAAI,EAAE;YAAEC,IAAI,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAG,CAAE;UAACC,UAAU,EAAE,EAAG;UAACC,QAAQ,EAAE,KAAM;UAACC,QAAQ,EAAE,KAAM;UAACC,MAAM,EAAE,CAAC,cAAc,EAAE,cAAc;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClLtB,OAAA,CAACT,GAAG;UAACqC,OAAO,EAAC,MAAM;UAACD,OAAO,EAAC,UAAU;UAACK,IAAI,EAAC,SAAS;UAACM,OAAO,EAAE,EAAG;UAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAACC,IAAI,EAAC;QAAY;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7GtB,OAAA,CAACT,GAAG;UAACqC,OAAO,EAAC,OAAO;UAACD,OAAO,EAAC,UAAU;UAACK,IAAI,EAAC,SAAS;UAACM,OAAO,EAAE,EAAG;UAACC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAACC,IAAI,EAAC;QAAyB;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3HtB,OAAA,CAACJ,OAAO;UAAC6C,OAAO,eAAEzC,OAAA,CAACH,aAAa;YAAC6C,IAAI,EAAC;UAAe;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAE;UAACL,SAAS,EAAC,eAAe;UAAC0B,MAAM,EAAE;YAACX,IAAI,EAAE,MAAM;YAAEY,OAAO,EAAE;UAAG;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACnB,EAAA,CArDEF,kBAAkB;AAAA4C,EAAA,GAAlB5C,kBAAkB;AAuDtB,eAAeA,kBAAkB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}