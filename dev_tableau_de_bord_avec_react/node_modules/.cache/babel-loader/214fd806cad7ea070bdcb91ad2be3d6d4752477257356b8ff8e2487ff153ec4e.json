{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\ScorePieChart.js\";\n// src/components/ScorePieChart.js\nimport React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Label } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScorePieChart = ({\n  score\n}) => {\n  // Convertir le score en pourcentage\n  const scorePercentage = score * 100;\n  const data = [{\n    name: 'Score',\n    value: scorePercentage,\n    fill: '#FF0000'\n  }, {\n    name: 'Rest',\n    value: 100 - scorePercentage,\n    fill: '#000'\n  }];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        startAngle: 90,\n        endAngle: -270 // -270 degrés pour un remplissage dans le sens inverse des aiguilles d'une montre\n        ,\n        innerRadius: \"70%\",\n        outerRadius: \"90%\",\n        paddingAngle: 5,\n        dataKey: \"value\",\n        children: [data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.fill\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Label, {\n          value: `${scorePercentage}%`,\n          position: \"center\",\n          className: \"label-score\",\n          fill: \"#3a3a3a\",\n          fontSize: \"10%\",\n          style: {\n            textAnchor: 'middle',\n            dominantBaseline: 'central'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = ScorePieChart;\nexport default ScorePieChart;\nvar _c;\n$RefreshReg$(_c, \"ScorePieChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","ResponsiveContainer","Label","jsxDEV","_jsxDEV","ScorePieChart","score","scorePercentage","data","name","value","fill","width","height","children","cx","cy","startAngle","endAngle","innerRadius","outerRadius","paddingAngle","dataKey","map","entry","index","fileName","_jsxFileName","lineNumber","columnNumber","position","className","fontSize","style","textAnchor","dominantBaseline","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/ScorePieChart.js"],"sourcesContent":["// src/components/ScorePieChart.js\r\nimport React from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Label } from 'recharts';\r\n\r\nconst ScorePieChart = ({ score }) => {\r\n  // Convertir le score en pourcentage\r\n  const scorePercentage = score * 100;\r\n  const data = [\r\n    { name: 'Score', value: scorePercentage, fill: '#FF0000' },\r\n    { name: 'Rest', value: 100 - scorePercentage, fill: '#000' },\r\n  ];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          cx=\"50%\"\r\n          cy=\"50%\"\r\n          startAngle={90}\r\n          endAngle={-270} // -270 degrés pour un remplissage dans le sens inverse des aiguilles d'une montre\r\n          innerRadius=\"70%\"\r\n          outerRadius=\"90%\"\r\n          paddingAngle={5}\r\n          dataKey=\"value\"\r\n        >\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={entry.fill} />\r\n          ))}\r\n          {/* Ajout du Label pour afficher le texte au centre du cercle */}\r\n          <Label\r\n            value={`${scorePercentage}%`}\r\n            position=\"center\"\r\n            className=\"label-score\"\r\n            fill=\"#3a3a3a\"\r\n            fontSize=\"10%\"\r\n            style={{ textAnchor: 'middle', dominantBaseline: 'central' }}\r\n          />\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ScorePieChart;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,mBAAmB,EAAEC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACnC;EACA,MAAMC,eAAe,GAAGD,KAAK,GAAG,GAAG;EACnC,MAAME,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAEH,eAAe;IAAEI,IAAI,EAAE;EAAU,CAAC,EAC1D;IAAEF,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,GAAG,GAAGH,eAAe;IAAEI,IAAI,EAAE;EAAO,CAAC,CAC7D;EAED,oBACEP,OAAA,CAACH,mBAAmB;IAACW,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAAAC,QAAA,eAC7CV,OAAA,CAACN,QAAQ;MAAAgB,QAAA,eACPV,OAAA,CAACL,GAAG;QACFS,IAAI,EAAEA,IAAK;QACXO,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,UAAU,EAAE,EAAG;QACfC,QAAQ,EAAE,CAAC,GAAI,CAAC;QAAA;QAChBC,WAAW,EAAC,KAAK;QACjBC,WAAW,EAAC,KAAK;QACjBC,YAAY,EAAE,CAAE;QAChBC,OAAO,EAAC,OAAO;QAAAR,QAAA,GAEdN,IAAI,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBrB,OAAA,CAACJ,IAAI;UAAuBW,IAAI,EAAEa,KAAK,CAACb;QAAK,GAAjC,QAAOc,KAAM,EAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAChD,CAAC,eAEFzB,OAAA,CAACF,KAAK;UACJQ,KAAK,EAAG,GAAEH,eAAgB,GAAG;UAC7BuB,QAAQ,EAAC,QAAQ;UACjBC,SAAS,EAAC,aAAa;UACvBpB,IAAI,EAAC,SAAS;UACdqB,QAAQ,EAAC,KAAK;UACdC,KAAK,EAAE;YAAEC,UAAU,EAAE,QAAQ;YAAEC,gBAAgB,EAAE;UAAU;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B,CAAC;AAACO,EAAA,GAtCI/B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}