{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserProfile from './components/UserProfile';\n//import DailyActivityChart from './components/DailyActivityChart';\n//import AverageSessionsChart from './components/AverageSessionsChart';\n//import PerformanceChart from './components/PerformanceChart';\n//import ScorePieChart from './components/ScorePieChart';\nimport KeyData from './components/KeyData';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport { toggleMockDataUsage, getMockDataStatus } from './services/apiService';\n\n// Composant principal de l'application qui orchestre tous les sous-composants.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // État pour l'identifiant de l'utilisateur, initialisé à 12\n  const [userId, setUserId] = useState(12);\n  // État pour contrôler si les données mockées sont utilisées\n  const [isMocked, setIsMocked] = useState(getMockDataStatus());\n\n  // Change l'identifiant de l'utilisateur entre deux valeurs pour simuler un changement d'utilisateur.\n  const handleUserChange = () => {\n    setUserId(userId === 12 ? 18 : 12);\n  };\n\n  // Bascule entre l'utilisation des données mockées et du backend et rafraîchit l'identifiant de l'utilisateur.\n  const handleToggleData = () => {\n    const newMockStatus = toggleMockDataUsage();\n    // Met à jour l'état local en fonction du statut des données mockées\n    setIsMocked(newMockStatus);\n    // Force l'ID utilisateur à être rafraichit après un changement de source\n    setUserId(userId => userId === 12 ? 18 : 12);\n  };\n\n  // Utilise useEffect pour surveiller les changements d'état de `isMocked` et affiche un log correspondant.\n  useEffect(() => {\n    console.log('Utilisation des données mockées:', isMocked);\n  }, [isMocked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"switch-id-button toogle-button\",\n      onClick: handleUserChange,\n      children: \"Changer d'utilisateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"switch-source-button toogle-button\",\n      onClick: handleToggleData,\n      children: isMocked ? 'Utiliser données du backend' : 'Utiliser données mockées'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profil-contain\",\n      children: /*#__PURE__*/_jsxDEV(UserProfile, {\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-tool\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-graph\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"litle-graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-data\",\n        children: /*#__PURE__*/_jsxDEV(KeyData, {\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MekGFp5FW9GulaBQEvj/gfk4ghs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserProfile","KeyData","Sidebar","Topbar","toggleMockDataUsage","getMockDataStatus","jsxDEV","_jsxDEV","App","_s","userId","setUserId","isMocked","setIsMocked","handleUserChange","handleToggleData","newMockStatus","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport UserProfile from './components/UserProfile';\n//import DailyActivityChart from './components/DailyActivityChart';\n//import AverageSessionsChart from './components/AverageSessionsChart';\n//import PerformanceChart from './components/PerformanceChart';\n//import ScorePieChart from './components/ScorePieChart';\nimport KeyData from './components/KeyData';\nimport './App.css';\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport { toggleMockDataUsage, getMockDataStatus } from './services/apiService';\n\n// Composant principal de l'application qui orchestre tous les sous-composants.\nconst App = () => {\n  // État pour l'identifiant de l'utilisateur, initialisé à 12\n  const [userId, setUserId] = useState(12);\n  // État pour contrôler si les données mockées sont utilisées\n  const [isMocked, setIsMocked] = useState(getMockDataStatus());\n\n  // Change l'identifiant de l'utilisateur entre deux valeurs pour simuler un changement d'utilisateur.\n  const handleUserChange = () => {\n    setUserId(userId === 12 ? 18 : 12);\n  };\n\n  // Bascule entre l'utilisation des données mockées et du backend et rafraîchit l'identifiant de l'utilisateur.\n  const handleToggleData = () => {\n    const newMockStatus = toggleMockDataUsage();\n    // Met à jour l'état local en fonction du statut des données mockées\n    setIsMocked(newMockStatus);\n    // Force l'ID utilisateur à être rafraichit après un changement de source\n    setUserId(userId => userId === 12 ? 18 : 12);\n  };\n\n  // Utilise useEffect pour surveiller les changements d'état de `isMocked` et affiche un log correspondant.\n  useEffect(() => {\n    console.log('Utilisation des données mockées:', isMocked);\n  }, [isMocked]);\n\n  return (\n    <div className=\"App\">\n      <Topbar />\n      <Sidebar />\n      <button className='switch-id-button toogle-button' onClick={handleUserChange}>Changer d'utilisateur</button>\n      <button className='switch-source-button toogle-button' onClick={handleToggleData}>{isMocked ? 'Utiliser données du backend' : 'Utiliser données mockées'}</button>\n      <div className='user-profil-contain'>\n        <UserProfile userId={userId} />\n      </div>\n      <div className='main-tool'>\n        <div className='main-graph'>\n          {/*<DailyActivityChart userId={userId} />*/}\n          <div className='litle-graph'>\n            {/*<AverageSessionsChart userId={userId} />\n            <PerformanceChart userId={userId} />\n  <ScorePieChart userId={userId} />*/}\n          </div>\n        </div>\n        <div className='main-data'>\n          <KeyData userId={userId} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}