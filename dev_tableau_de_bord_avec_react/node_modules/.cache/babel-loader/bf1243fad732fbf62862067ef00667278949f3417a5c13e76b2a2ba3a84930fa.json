{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Création du contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Hook personnalisé pour accéder au contexte plus facilement\nexport const useData = () => {\n  _s();\n  return useContext(DataContext);\n};\n\n// Fournisseur de contexte qui englobe les composants enfants de l'application\n_s(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  // État pour gérer l'ID de l'utilisateur actuel\n  const [userId, setUserId] = useState(12); // Commence avec l'utilisateur ID 12\n\n  // État pour déterminer si les données mockées sont utilisées\n  const [useMockData, setUseMockData] = useState(false); // Utilise les données réelles par défaut\n\n  // Fonction pour basculer entre les utilisateurs 12 et 18\n  const toggleUserId = () => {\n    setUserId(prevUserId => prevUserId === 12 ? 18 : 12);\n  };\n\n  // Fonction pour basculer entre les données mockées et les données du serveur\n  const toggleDataSrc = () => {\n    setUseMockData(prevUseMockData => !prevUseMockData);\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      userId,\n      useMockData,\n      toggleUserId,\n      toggleDataSrc\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s2(DataProvider, \"D7OBMvsTwzSwCpwf9WvuxHKqYjw=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","DataContext","useData","_s","DataProvider","children","_s2","userId","setUserId","useMockData","setUseMockData","toggleUserId","prevUserId","toggleDataSrc","prevUseMockData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/DataContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Création du contexte\r\nconst DataContext = createContext();\r\n\r\n// Hook personnalisé pour accéder au contexte plus facilement\r\nexport const useData = () => useContext(DataContext);\r\n\r\n// Fournisseur de contexte qui englobe les composants enfants de l'application\r\nexport const DataProvider = ({ children }) => {\r\n    // État pour gérer l'ID de l'utilisateur actuel\r\n    const [userId, setUserId] = useState(12); // Commence avec l'utilisateur ID 12\r\n\r\n    // État pour déterminer si les données mockées sont utilisées\r\n    const [useMockData, setUseMockData] = useState(false); // Utilise les données réelles par défaut\r\n\r\n    // Fonction pour basculer entre les utilisateurs 12 et 18\r\n    const toggleUserId = () => {\r\n        setUserId(prevUserId => (prevUserId === 12 ? 18 : 12));\r\n    };\r\n\r\n    // Fonction pour basculer entre les données mockées et les données du serveur\r\n    const toggleDataSrc = () => {\r\n        setUseMockData(prevUseMockData => !prevUseMockData);\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{ userId, useMockData, toggleUserId, toggleDataSrc }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACvBH,SAAS,CAACI,UAAU,IAAKA,UAAU,KAAK,EAAE,GAAG,EAAE,GAAG,EAAG,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBH,cAAc,CAACI,eAAe,IAAI,CAACA,eAAe,CAAC;EACvD,CAAC;EAED,oBACId,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,MAAM;MAAEE,WAAW;MAAEE,YAAY;MAAEE;IAAc,CAAE;IAAAR,QAAA,EAC7EA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACd,GAAA,CAtBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}