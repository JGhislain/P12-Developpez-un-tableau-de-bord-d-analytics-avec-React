{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport UserProfile from './components/UserProfile';\nimport DailyActivityChart from './components/DailyActivityChart';\nimport AverageSessionsChart from './components/AverageSessionsChart';\nimport PerformanceChart from './components/PerformanceChart';\nimport ScorePieChart from './components/ScorePieChart';\nimport KeyData from './components/KeyData';\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport { getUserData, getUserActivity, getUserAverageSessions, getUserPerformance } from './services/apiService';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const userId = 12; // Supposons que l'ID de l'utilisateur est 12 pour cet exemple\n  const [userData, setUserData] = useState({});\n  const [userActivity, setUserActivity] = useState({});\n  const [userAverageSessions, setUserAverageSessions] = useState({});\n  const [userPerformance, setUserPerformance] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      // Appel des fonctions API pour chaque type de données\n      const userData = await getUserData(userId);\n      const activityData = await getUserActivity(userId);\n      const averageSessionsData = await getUserAverageSessions(userId);\n      const performanceData = await getUserPerformance(userId);\n\n      // Mise à jour de l'état avec les données récupérées\n      setUserData(userData);\n      setUserActivity(activityData);\n      setUserAverageSessions(averageSessionsData);\n      setUserPerformance(performanceData);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-tool\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-graph\",\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          userId: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DailyActivityChart, {\n          data: userActivity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AverageSessionsChart, {\n          data: userAverageSessions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PerformanceChart, {\n          data: userPerformance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScorePieChart, {\n          score: userData.todayScore || userData.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-data\",\n        children: /*#__PURE__*/_jsxDEV(KeyData, {\n          data: userData.keyData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FZ2rr5n4i6UI0VcV/AkPkZ0eg0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserProfile","DailyActivityChart","AverageSessionsChart","PerformanceChart","ScorePieChart","KeyData","Sidebar","Topbar","getUserData","getUserActivity","getUserAverageSessions","getUserPerformance","jsxDEV","_jsxDEV","App","_s","userId","userData","setUserData","userActivity","setUserActivity","userAverageSessions","setUserAverageSessions","userPerformance","setUserPerformance","fetchData","activityData","averageSessionsData","performanceData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","score","todayScore","keyData","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserProfile from './components/UserProfile';\nimport DailyActivityChart from './components/DailyActivityChart';\nimport AverageSessionsChart from './components/AverageSessionsChart';\nimport PerformanceChart from './components/PerformanceChart';\nimport ScorePieChart from './components/ScorePieChart';\nimport KeyData from './components/KeyData';\nimport Sidebar from './components/Sidebar';\nimport Topbar from './components/Topbar';\nimport { getUserData, getUserActivity, getUserAverageSessions, getUserPerformance } from './services/apiService';\nimport './App.css';\n\nconst App = () => {\n  const userId = 12; // Supposons que l'ID de l'utilisateur est 12 pour cet exemple\n  const [userData, setUserData] = useState({});\n  const [userActivity, setUserActivity] = useState({});\n  const [userAverageSessions, setUserAverageSessions] = useState({});\n  const [userPerformance, setUserPerformance] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Appel des fonctions API pour chaque type de données\n      const userData = await getUserData(userId);\n      const activityData = await getUserActivity(userId);\n      const averageSessionsData = await getUserAverageSessions(userId);\n      const performanceData = await getUserPerformance(userId);\n      \n      // Mise à jour de l'état avec les données récupérées\n      setUserData(userData);\n      setUserActivity(activityData);\n      setUserAverageSessions(averageSessionsData);\n      setUserPerformance(performanceData);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Topbar />\n      <Sidebar />\n      <div className='main-tool'>\n        <div className='main-graph'>\n          <UserProfile userId=\"12\" />\n          <DailyActivityChart data={userActivity} />\n          <AverageSessionsChart data={userAverageSessions} />\n          <PerformanceChart data={userPerformance} />\n          <ScorePieChart score={userData.todayScore || userData.score} />\n        </div>\n        <div className='main-data'>\n          <KeyData data={userData.keyData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}