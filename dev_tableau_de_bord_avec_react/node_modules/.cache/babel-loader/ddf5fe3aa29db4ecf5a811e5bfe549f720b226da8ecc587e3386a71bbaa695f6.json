{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\DailyActivityChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip } from 'recharts';\nimport CustomTooltip from './CustomTooltip';\nimport { getUserActivity } from '../services/apiService';\n\n// Composant pour afficher l'activité quotidienne de l'utilisateur\n// 'userId' est passé en prop au composant pour récupérer les données spécifiques à cet utilisateur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyActivityChart = ({\n  userId\n}) => {\n  _s();\n  // État pour stocker les données d'activité\n  const [activityData, setActivityData] = useState([]);\n\n  // Récupération des données d'activité à chaque changement de userId\n  useEffect(() => {\n    const fetchActivityData = async () => {\n      try {\n        const {\n          data\n        } = await getUserActivity(userId);\n        if (data.sessions) {\n          const cleanedData = data.sessions.map(session => ({\n            kilogram: session.kilogram || 0,\n            // Assure une valeur par défaut de 0 si non défini\n            calories: session.calories || 0,\n            // Assure une valeur par défaut de 0 si non défini\n            day: session.day\n          }));\n          console.log(\"Données nettoyées pour le graphique:\", cleanedData);\n          setActivityData(cleanedData);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des données d'activité\", error);\n      }\n    };\n    fetchActivityData();\n  }, [userId]); // Ajouter userId comme dépendance de useEffect pour relancer la requête si userId change\n\n  // Formatage des données pour l'affichage\n  const formattedData = activityData.map(session => ({\n    ...session,\n    day: `${new Date(session.day).getDate()}`\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-activity-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"daily-chart-title\",\n        children: \"Activit\\xE9 quotidienne\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-weight\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color-weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-legend\",\n            children: \"Poids (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-cal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-color-cal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-legend\",\n            children: \"Calories br\\xFBl\\xE9es (kCal)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      className: \"recharts-activity-daily\",\n      width: \"88%\",\n      height: 300,\n      style: {\n        padding: '30px 0 30px 20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        className: \"barchart-activity-daily\",\n        data: formattedData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          vertical: false,\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"day\",\n          tick: {\n            fill: '#9B9EAC',\n            fontSize: 14\n          },\n          tickMargin: 16,\n          tickLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\",\n          orientation: \"left\",\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\",\n          tick: {\n            fill: '#9B9EAC',\n            fontSize: 14\n          },\n          tickMargin: 35,\n          tickLine: false,\n          axisLine: false,\n          domain: ['dataMin - 50', 'dataMax + 50']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"left\",\n          dataKey: \"kilogram\",\n          fill: \"#282D30\",\n          barSize: 10,\n          radius: [3, 3, 0, 0],\n          name: \"Poids (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          yAxisId: \"right\",\n          dataKey: \"calories\",\n          fill: \"#E60000\",\n          barSize: 10,\n          radius: [3, 3, 0, 0],\n          name: \"Calories br\\xFBl\\xE9es (kCal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {\n            type: \"dailyActivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 31\n          }, this),\n          className: \"daily-tooltip\",\n          cursor: {\n            fill: 'grey',\n            opacity: 0.3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(DailyActivityChart, \"Qc5IpcC4vhcEOdc2tcJS7hO22yI=\");\n_c = DailyActivityChart;\nexport default DailyActivityChart;\nvar _c;\n$RefreshReg$(_c, \"DailyActivityChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","Bar","XAxis","YAxis","CartesianGrid","ResponsiveContainer","Tooltip","CustomTooltip","getUserActivity","jsxDEV","_jsxDEV","DailyActivityChart","userId","_s","activityData","setActivityData","fetchActivityData","data","sessions","cleanedData","map","session","kilogram","calories","day","console","log","error","formattedData","Date","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","style","padding","vertical","strokeDasharray","dataKey","tick","fill","fontSize","tickMargin","tickLine","yAxisId","orientation","hide","axisLine","domain","barSize","radius","name","content","type","cursor","opacity","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/DailyActivityChart.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport CustomTooltip from './CustomTooltip';\r\nimport { getUserActivity } from '../services/apiService';\r\n\r\n// Composant pour afficher l'activité quotidienne de l'utilisateur\r\n// 'userId' est passé en prop au composant pour récupérer les données spécifiques à cet utilisateur\r\nconst DailyActivityChart = ({ userId }) => {\r\n  // État pour stocker les données d'activité\r\n  const [activityData, setActivityData] = useState([]);\r\n\r\n  // Récupération des données d'activité à chaque changement de userId\r\n  useEffect(() => {\r\n    const fetchActivityData = async () => {\r\n        try {\r\n            const { data } = await getUserActivity(userId);\r\n            if (data.sessions) {\r\n                const cleanedData = data.sessions.map(session => ({\r\n                    kilogram: session.kilogram || 0, // Assure une valeur par défaut de 0 si non défini\r\n                    calories: session.calories || 0, // Assure une valeur par défaut de 0 si non défini\r\n                    day: session.day\r\n                }));\r\n                console.log(\"Données nettoyées pour le graphique:\", cleanedData);\r\n                setActivityData(cleanedData);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des données d'activité\", error);\r\n        }\r\n    };\r\n\r\n    fetchActivityData();\r\n}, [userId]); // Ajouter userId comme dépendance de useEffect pour relancer la requête si userId change\r\n\r\n  // Formatage des données pour l'affichage\r\n  const formattedData = activityData.map(session => ({\r\n      ...session,\r\n      day: `${new Date(session.day).getDate()}`,\r\n  }));\r\n  \r\n    return (\r\n      <div className=\"daily-activity-chart\">\r\n        <div className=\"chart-header\">\r\n          <h2 className='daily-chart-title'>Activité quotidienne</h2>\r\n          {/* Légende pour les indicateurs graphiques */}\r\n          <div className=\"chart-legend\">\r\n            <div className=\"legend-weight\">\r\n              {/* Indicateur visuel pour le poids */}\r\n              <span className=\"legend-color-weight\"></span>\r\n              <span className='text-legend'>Poids (kg)</span>\r\n            </div>\r\n            <div className=\"legend-cal\">\r\n              {/* Indicateur visuel pour les calories brûlées */}\r\n              <span className=\"legend-color-cal\"></span>\r\n              <span className='text-legend'>Calories brûlées (kCal)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ResponsiveContainer className='recharts-activity-daily' width=\"88%\" height={300} style={{ padding: '30px 0 30px 20px' }}>\r\n          <BarChart className='barchart-activity-daily' data={formattedData}>\r\n            {/* Grille de fond pour améliorer la lisibilité */}\r\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n            {/* Axe X affichant les jours */}\r\n            <XAxis dataKey=\"day\" tick={{ fill: '#9B9EAC', fontSize: 14 }} tickMargin={16} tickLine={false}/>\r\n            {/* Axe Y gauche pour le poids, caché pour simplifier le graphique */}\r\n            <YAxis yAxisId=\"left\" orientation=\"left\" hide={true} />\r\n            {/* Axe Y droit pour les calories, avec ajustement de l'échelle */}\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" tick={{ fill: '#9B9EAC', fontSize: 14 }} tickMargin={35} tickLine={false} axisLine={false} domain={['dataMin - 50', 'dataMax + 50']} />\r\n            {/* Barre pour le poids */}\r\n            <Bar yAxisId=\"left\" dataKey=\"kilogram\" fill=\"#282D30\" barSize={10} radius={[3, 3, 0, 0]} name=\"Poids (kg)\" />\r\n            {/* Barre pour les calories */}\r\n            <Bar yAxisId=\"right\" dataKey=\"calories\" fill=\"#E60000\" barSize={10} radius={[3, 3, 0, 0]} name=\"Calories brûlées (kCal)\" />\r\n            {/* Infobulle pour plus de détails au survol */}\r\n            <Tooltip content={<CustomTooltip type=\"dailyActivity\"/>} className=\"daily-tooltip\" cursor={{fill: 'grey', opacity: 0.3}} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default DailyActivityChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}