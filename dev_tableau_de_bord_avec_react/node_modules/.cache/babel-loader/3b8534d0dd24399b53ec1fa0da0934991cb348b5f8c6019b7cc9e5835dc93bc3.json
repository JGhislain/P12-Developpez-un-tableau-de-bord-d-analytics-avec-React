{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghisl\\\\Desktop\\\\p12\\\\dev_tableau_de_bord_avec_react\\\\src\\\\components\\\\CustomTooltip.js\";\nimport React from 'react';\n\n/**\r\n * Composant pour afficher des infobulles personnalisées dans les graphiques.\r\n * Selon le type de graphique, l'infobulle s'adapte pour montrer les données pertinentes.\r\n * @param {boolean} active - Indique si l'infobulle doit être affichée.\r\n * @param {array} payload - Contient les données à afficher dans l'infobulle.\r\n * @param {string} label - Utilisé pour afficher une étiquette spécifique dans l'infobulle.\r\n * @param {string} type - Type de graphique pour lequel l'infobulle est configurée.\r\n * @returns {JSX.Element|null} - Un élément JSX représentant l'infobulle ou null si inactif.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label,\n  type\n}) => {\n  // Vérifie si l'infobulle doit être active et que les données sont disponibles\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [type === 'dailyActivity' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-daily\",\n          style: {\n            backgroundColor: '#E60000',\n            color: '#FFF',\n            fontSize: '14px',\n            padding: '15px',\n            margin: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label-weight\",\n            style: {\n              paddingBottom: '25px'\n            },\n            children: `${payload[0].value}kg`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${payload[1].value}Kcal`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), type === 'averageSessions' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-average\",\n          style: {\n            backgroundColor: '#FFF',\n            color: '#000',\n            fontSize: '10px',\n            margin: '0 10px',\n            width: '50px',\n            height: '30px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${payload[0].value} min`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  // Retourne null si l'infobulle n'est pas active ou si les données ne sont pas disponibles\n  return null;\n};\n_c = CustomTooltip;\nexport default CustomTooltip;\nvar _c;\n$RefreshReg$(_c, \"CustomTooltip\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTooltip","active","payload","label","type","length","className","children","style","backgroundColor","color","fontSize","padding","margin","paddingBottom","value","fileName","_jsxFileName","lineNumber","columnNumber","width","height","display","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["C:/Users/ghisl/Desktop/p12/dev_tableau_de_bord_avec_react/src/components/CustomTooltip.js"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Composant pour afficher des infobulles personnalisées dans les graphiques.\r\n * Selon le type de graphique, l'infobulle s'adapte pour montrer les données pertinentes.\r\n * @param {boolean} active - Indique si l'infobulle doit être affichée.\r\n * @param {array} payload - Contient les données à afficher dans l'infobulle.\r\n * @param {string} label - Utilisé pour afficher une étiquette spécifique dans l'infobulle.\r\n * @param {string} type - Type de graphique pour lequel l'infobulle est configurée.\r\n * @returns {JSX.Element|null} - Un élément JSX représentant l'infobulle ou null si inactif.\r\n */\r\nconst CustomTooltip = ({ active, payload, label, type }) => {\r\n  // Vérifie si l'infobulle doit être active et que les données sont disponibles\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        {/* Infobulle pour l'activité quotidienne montrant le poids et les calories brûlées */}\r\n        {type === 'dailyActivity' && (\r\n          <>\r\n            <div className=\"label-daily\" style={{ backgroundColor: '#E60000', color:'#FFF', fontSize:'14px', padding: '15px', margin:'25px'}}>\r\n              <p className='label-weight' style={{paddingBottom: '25px'}}>{`${payload[0].value}kg`}</p>\r\n              <p>{`${payload[1].value}Kcal`}</p>\r\n            </div>\r\n          </>\r\n        )}\r\n        {/* Infobulle pour les sessions moyennes montrant la durée des sessions en minutes */}\r\n        {type === 'averageSessions' && (\r\n          <>\r\n            <div className=\"label-average\" style={{ backgroundColor: '#FFF', color:'#000', fontSize:'10px', margin:'0 10px', width: '50px', height: '30px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n              <p>{`${payload[0].value} min`}</p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  // Retourne null si l'infobulle n'est pas active ou si les données ne sont pas disponibles\r\n  return null;\r\n};\r\n\r\nexport default CustomTooltip;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EAC1D;EACA,IAAIH,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACG,MAAM,EAAE;IACvC,oBACER,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAE5BH,IAAI,KAAK,eAAe,iBACvBP,OAAA,CAAAE,SAAA;QAAAQ,QAAA,eACEV,OAAA;UAAKS,SAAS,EAAC,aAAa;UAACE,KAAK,EAAE;YAAEC,eAAe,EAAE,SAAS;YAAEC,KAAK,EAAC,MAAM;YAAEC,QAAQ,EAAC,MAAM;YAAEC,OAAO,EAAE,MAAM;YAAEC,MAAM,EAAC;UAAM,CAAE;UAAAN,QAAA,gBAC/HV,OAAA;YAAGS,SAAS,EAAC,cAAc;YAACE,KAAK,EAAE;cAACM,aAAa,EAAE;YAAM,CAAE;YAAAP,QAAA,EAAG,GAAEL,OAAO,CAAC,CAAC,CAAC,CAACa,KAAM;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzFtB,OAAA;YAAAU,QAAA,EAAK,GAAEL,OAAO,CAAC,CAAC,CAAC,CAACa,KAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,gBACN,CACH,EAEAf,IAAI,KAAK,iBAAiB,iBACzBP,OAAA,CAAAE,SAAA;QAAAQ,QAAA,eACEV,OAAA;UAAKS,SAAS,EAAC,eAAe;UAACE,KAAK,EAAE;YAAEC,eAAe,EAAE,MAAM;YAAEC,KAAK,EAAC,MAAM;YAAEC,QAAQ,EAAC,MAAM;YAAEE,MAAM,EAAC,QAAQ;YAAEO,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,MAAM;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE;UAAQ,CAAE;UAAAjB,QAAA,eAC/MV,OAAA;YAAAU,QAAA,EAAK,GAAEL,OAAO,CAAC,CAAC,CAAC,CAACa,KAAM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,gBACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;EACA;EACA,OAAO,IAAI;AACb,CAAC;AAACM,EAAA,GA3BIzB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}